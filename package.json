{
  "name": "@cristiand391/sf-plugin-api",
  "description": "A Salesforce CLI plugin to interact with the Salesforce APIs.",
  "version": "0.0.1",
  "author": {
    "name": "Cristian Dominguez",
    "url": "https://github.com/cristiand391"
  },
  "bugs": "https://github.com/cristiand391/sf-plugin-api/issues",
  "dependencies": {
    "@oclif/core": "^2.11.8",
    "@salesforce/core": "^5.2.1",
    "@salesforce/sf-plugins-core": "^3.1.15",
    "chalk": "^4",
    "got": "11.8.5",
    "proxy-agent": "^6.3.0"
  },
  "devDependencies": {
    "@oclif/plugin-command-snapshot": "^4.0.12",
    "@salesforce/ts-sinon": "^1.4.14",
    "@swc/core": "^1.3.11",
    "@types/chai": "^4.3.4",
    "@types/inquirer": "^9.0.3",
    "@types/mocha": "^10.0.1",
    "@types/sinon": "^10.0.13",
    "@typescript-eslint/eslint-plugin": "^5.40.0",
    "@typescript-eslint/parser": "^5.40.1",
    "chai": "^4.3.6",
    "eslint": "^8.26.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-config-salesforce": "^1.1.0",
    "eslint-config-salesforce-typescript": "^1.1.1",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-jsdoc": "^46.4.6",
    "eslint-plugin-sf-plugin": "^1.16.2",
    "mocha": "^10.2.0",
    "nock": "^13.3.0",
    "oclif": "^3.11.3",
    "prettier": "^3.0.1",
    "shx": "0.3.4",
    "sinon": "^15.0.3",
    "ts-node": "^10.9.1",
    "typescript": "^4.8.4",
    "wireit": "^0.10.0"
  },
  "engines": {
    "node": ">=16"
  },
  "prettier": {
    "singleQuote": true
  },
  "files": [
    "/lib",
    "/messages",
    "/oclif.manifest.json"
  ],
  "homepage": "https://github.com/cristiand391/sf-plugin-api",
  "keywords": [
    "force",
    "salesforce",
    "sfdx",
    "salesforcedx",
    "sfdx-plugin",
    "sf-plugin",
    "sf"
  ],
  "license": "BSD-3-Clause",
  "main": "lib/index.js",
  "oclif": {
    "commands": "./lib/commands",
    "bin": "sf",
    "topicSeparator": " ",
    "devPlugins": [
      "@oclif/plugin-command-snapshot"
    ]
  },
  "repository": "https://github.com/cristiand391/sf-plugin-api",
  "scripts": {
    "build": "wireit",
    "clean": "shx rm -rf tmp lib test_session*",
    "clean-all": "yarn clean && shx rm -rf node_modules .wireit *.tsbuildinfo .eslintcache",
    "compile": "wireit",
    "format": "wireit",
    "lint": "wireit",
    "postpack": "shx rm -f oclif.manifest.json",
    "prepack": "oclif manifest .",
    "test": "wireit",
    "version": "oclif readme"
  },
  "wireit": {
    "build": {
      "dependencies": [
        "compile",
        "lint"
      ]
    },
    "compile": {
      "command": "tsc -p . --pretty --incremental",
      "files": [
        "src/**/*.ts",
        "**/tsconfig.json",
        "messages/**"
      ],
      "output": [
        "lib/**",
        "*.tsbuildinfo"
      ],
      "clean": "if-file-deleted"
    },
    "format": {
      "command": "prettier --write \"+(src|test|schemas)/**/*.+(ts|js|json)|command-snapshot.json\"",
      "files": [
        "src/**/*.ts",
        "test/**/*.ts",
        "command-snapshot.json",
        ".prettier*"
      ],
      "output": []
    },
    "lint": {
      "command": "eslint src test --color --cache --cache-location .eslintcache",
      "files": [
        "src/**/*.ts",
        "test/**/*.ts",
        "messages/**",
        "**/.eslint*",
        "**/tsconfig.json"
      ],
      "output": []
    },
    "test": {
      "dependencies": [
        "test:compile",
        "test:run",
        "test:deprecation-policy",
        "lint"
      ]
    },
    "test:deprecation-policy": {
      "command": "\"./bin/dev\" snapshot:compare",
      "files": [
        "src/**/*.ts"
      ],
      "output": [],
      "dependencies": [
        "compile"
      ]
    },
    "test:compile": {
      "command": "tsc -p \"./test\" --pretty",
      "files": [
        "test/**/*.ts",
        "**/tsconfig.json"
      ],
      "output": []
    },
    "test:run": {
      "command": "mocha \"test/**/*.test.ts\"",
      "env": {
        "FORCE_COLOR": "2"
      },
      "files": [
        "test/**/*.ts",
        "src/**/*.ts",
        "**/tsconfig.json",
        ".mocha*"
      ],
      "output": []
    }
  },
  "publishConfig": {
    "access": "public"
  }
}
